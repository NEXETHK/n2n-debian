name: Auto generated debian n2n Package for Nexet SDN Network
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Fix Checkout
        run: |
          git submodule update --init --recursive 
  test_linux:
    name: Test Linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fix Checkout
        run: |
          git submodule update --init --recursive
          git fetch --force --tags

  package_dpkg:
    name: Package for Debian/Ubuntu
    needs:
      - test_linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch:
          - amd64
          - arm64
          - armhf
          - i386
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fix Checkout
        run: |
          git submodule update --init --recursive 
          git fetch --force --tags
      - name: Install packages needed for build
        run: |
          sudo apt-get update
          sudo apt-get install debhelper build-essential \
            crossbuild-essential-${{ matrix.arch }}
      - name: Configure
        # The HOST_TRIPLET line is not easily foldable
        # yamllint disable rule:line-length
        run: |
          # This will warn about CC, but we cannot set CC until we run it :-S
          HOST_TRIPLET=$(dpkg-architecture -a${{ matrix.arch }} -q DEB_HOST_GNU_TYPE)
          export CC=$HOST_TRIPLET-gcc
          export AR=$HOST_TRIPLET-ar
          cd n2n/
          ./autogen.sh
          ./configure --host $HOST_TRIPLET
          cd ./packages/debian/
          ./configure EXTN=${{ matrix.arch }}
        # yamllint enable rule:line-length

      - name: Build
        run: |
          cd n2n/packages/debian/
          make
      - name: Upload dpkg
        uses: actions/upload-artifact@v2
        with:
          name: packages-dpkg
          path: n2n/packages/debian/*.deb

  upload_releases:
    name: Upload Release Assets
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - package_dpkg
    runs-on: ubuntu-latest
    
    steps:
      - name: Fetch all Artifacts
        if: steps.get_tagtype.outputs.TAGTYPE == 'tag'
        uses: actions/download-artifact@v2
        with:
          path: artifacts

       - name: Upload Assets to Release
        if: steps.get_tagtype.outputs.TAGTYPE == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            artifacts/packages-dpkg/*.deb


